# HTTP to HTTPS redirect
server {
    listen 80;
    server_name learnonai.com www.learnonai.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name learnonai.com www.learnonai.com;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/learnonai.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/learnonai.com/privkey.pem;
    
    # Admin panel - MUST be before client location
    location /admin {
        alias /home/ubuntu/ayurvedic-ecommerce/admin-panel/build/;
        try_files $uri $uri/ /admin/index.html;
        index index.html;
    }
    
    # Admin panel assets
    location /admin/static/ {
        alias /home/ubuntu/ayurvedic-ecommerce/admin-panel/build/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # API routes
    location /api/ {
        proxy_pass http://localhost:5000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # Backend uploads
    location /uploads/ {
        proxy_pass http://localhost:5000/uploads/;
        proxy_set_header Host $host;
        add_header 'Access-Control-Allow-Origin' '*' always;
    }
    
    # Client website - MUST be last
    location / {
        proxy_pass http://localhost:3001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        try_files $uri $uri/ @client_fallback;
    }
    
    location @client_fallback {
        proxy_pass http://localhost:3001/;
        proxy_set_header Host $host;
    }
}